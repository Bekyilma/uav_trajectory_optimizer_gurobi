diff --git a/acl_demos/launch/joy.launch b/acl_demos/launch/joy.launch
index 9a09c10..398f585 100644
--- a/acl_demos/launch/joy.launch
+++ b/acl_demos/launch/joy.launch
@@ -1,6 +1,7 @@
 <launch>
 	<arg name="dev" default="js0" />
 	<arg name="room" default="vicon"/>
+	<arg name="override" default="false"/>
 	<arg name="quad"/>
 	<!-- joy node -->
 	<node ns="$(arg quad)" pkg="joy" type="joy_node" name="joystick" >
@@ -10,6 +11,7 @@
 	</node>
 	<node ns="$(arg quad)" name="joy" pkg="acl_demos" type="joy.py" output="screen">
 		<param name="~joyAttitude" value="false"/>
+		<param name="override" value="$(arg override)" />
 		<rosparam file="$(find acl_demos)/room_cfg/$(arg room).yaml" command="load"/>
 	</node>
 </launch>
diff --git a/acl_demos/scripts/joy.py b/acl_demos/scripts/joy.py
index f2cb156..ce986d8 100755
--- a/acl_demos/scripts/joy.py
+++ b/acl_demos/scripts/joy.py
@@ -9,7 +9,7 @@ from sensor_msgs.msg import Joy
 from geometry_msgs.msg import PoseStamped, Pose
 
 # local imports
-from acl_msgs.msg import QuadGoal
+from acl_msgs.msg import QuadGoal, ViconState
 import utils
 import numpy as np
 
@@ -72,13 +72,28 @@ class QuadJoy:
 
         self.alt = TAKEOFF_ALT
 
+        self.override = rospy.get_param('~override',False)
+
     def poseCB(self, data):
         self.pose = data.pose
 
+        if self.override:
+            self.goal.pos = data.pose.position
+
+            self.status = FLYING
+
+            self.override = False
+
+            print("** Override **")
+
+
     def goalCB(self, data):
         self.recent_goal = data
 
     def sendGoal(self):
+        if self.override:
+            return
+
         # self.goal.waypointType = self.wpType
         if self.wpType == DISABLE:
             self.goal.cut_power = True
